breaks = seq(5310, 5970, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5310, 5970, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5310, 5970, 30),
limits = c(4000, 6000)) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5310, 5970, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5310, 5970, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5310, 5970, 30),
limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5310, 5970, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5310, 5970, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5310, 5970, 30),
#limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5460, 5970, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5460, 5970, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5460, 5970, 30),
#limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5430, 5970, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5430, 5970, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5430, 5970, 30),
#limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5430, 5950, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5430, 5950, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5430, 5950, 30),
#limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5430, 5960, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5430, 5960, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5430, 5960, 30),
#limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
ggplot() +
geom_contour_fill(data = da, aes(x = longitude, y = latitude, z = geoHeight),
linewidth = 0.2,
breaks = seq(5430, 5970, 30),
colour = "blue") +
geom_text_contour(data = da, aes(x = longitude, y = latitude, z = geoHeight),
size = 3,
breaks = seq(5430, 5970, 30),
colour = "blue",
check_overlap = TRUE,
skip = 0) +
geom_sf(data = wld) +
geom_sf(data = st_cast(cmap, 'MULTILINESTRING')) +
scale_fill_fermenter2(palette = palCol,
direction = 1,
breaks = seq(5430, 5970, 30),
#limits = c(4000, 6000),
) +
coord_sf(expand = FALSE, xlim = c(50, 180), ylim = c(0, 80)) +
ggtitle("500 hPa geopotential height at 2022-07-21 02:00:00") +
theme_bw() +
theme(axis.title = element_blank(),
legend.key.height = unit(1.8, "cm"))
output <- "C:/Rmet/ex3/等高线_填充.png"
ggsave(filename = output, width = 6, height = 6, dpi = 600)
diri <- "datasets/中国均一化月气温与降水数据/PRCP/datasets/SURF_CLI_CHN_PRE_MUT_HOMO-MON-51495.txt"
da <- read.table(diri)
head(da)
da <- read.table(diri) |> subset(select = c(1,2,4))
head(da)
names(da) <- c("year", "month", "prcp")
head(da)
startYear <- min(da$year)
endYear <- max(da$year)
nyr <- endYear - startYear + 1
dd <- data.frame(year = startYear:endYear,
prcp = NA)
dd[dd$year == i, "prcp"] <- sum(dy)
diri <- "datasets/中国均一化月气温与降水数据/PRCP/datasets/SURF_CLI_CHN_PRE_MUT_HOMO-MON-51495.txt"
da <- read.table(diri) |> subset(select = c(1,2,4))
names(da) <- c("year", "month", "prcp")
head(da)
startYear <- min(da$year)
endYear <- max(da$year)
nyr <- endYear - startYear + 1
dd <- data.frame(year = startYear:endYear,
prcp = NA)
for (i in startYear:endYear) {
dy <- da[da$year == i, "prcp"]
dd[dd$year == i, "prcp"] <- sum(dy)
}
dd
diri <- "datasets/中国均一化月气温与降水数据/PRCP/datasets/SURF_CLI_CHN_PRE_MUT_HOMO-MON-51495.txt"
da <- read.table(diri) |> subset(select = c(1,2,4))
names(da) <- c("year", "month", "prcp")
da[da$prcp < 0, "prcp"] <- NA
head(da)
startYear <- min(da$year)
endYear <- max(da$year)
nyr <- endYear - startYear + 1
dd <- data.frame(year = startYear:endYear,
prcp = NA)
for (i in startYear:endYear) {
dy <- da[da$year == i, "prcp"]
dd[dd$year == i, "prcp"] <- sum(dy)
}
dd
dd <- na.omit(dd)
dd
library(ggplot2)
ggplot() +
geom_line(data = dd, aes(x = year, y = prcp))
ggplot() +
geom_line(data = dd, aes(x = year, y = prcp)) +
stat_smooth(method = lm, se = FALSE, colour = "black")
ggplot(data = dd, aes(x = year, y = prcp)) +
geom_line() +
stat_smooth(method = lm, se = FALSE, colour = "black")
library(ggplot2)
diri <- "datasets/中国均一化月气温与降水数据/PRCP/datasets/SURF_CLI_CHN_PRE_MUT_HOMO-MON-51747.txt"
da <- read.table(diri) |> subset(select = c(1,2,4))
names(da) <- c("year", "month", "prcp")
da[da$prcp < 0, "prcp"] <- NA
head(da)
startYear <- min(da$year)
endYear <- max(da$year)
nyr <- endYear - startYear + 1
dd <- data.frame(year = startYear:endYear,
prcp = NA)
for (i in startYear:endYear) {
dy <- da[da$year == i, "prcp"]
dd[dd$year == i, "prcp"] <- sum(dy)
}
dd <- na.omit(dd)
dd
ggplot(data = dd, aes(x = year, y = prcp)) +
geom_line() +
stat_smooth(method = lm, se = FALSE, colour = "black")
ggplot(data = dd, aes(x = year, y = prcp)) +
geom_line() +
stat_smooth(formula = 'y ~ x', method = lm, se = FALSE, colour = "black")
startYear
dd
library(ncdf4)
diri <- "adwGRID/results/global_climdex_temp_1901-2022.nc"
f <- nc_open(diri)
f
122*12
dirim <- "F:/datasets/SURF_CLI_GLB_PRE_DAY/全球陆地日降水数据集(V1.0)/documents"
filim <- "SURF_CLI_GLB_PRE_DAY_STATION.csv"
dm <- read.csv(file.path(dirim, filim))
head(dm)
dirim <- "F:/datasets/SURF_CLI_GLB_PRE_DAY/全球陆地日降水数据集(V1.0)/documents"
filim <- "SURF_CLI_GLB_PRE_DAY_STATION.csv"
dm <- read.csv(file.path(dirim, filim))
head(dm)
names(dm) <- c("ID", "lon", "lat", "elevation", "name", "start", "end", "source")
head(dm)
str(dm)
head(dm)
table(dm$source)
dm <- dm[dm$source == "CMA",]
head(dm)
table(dm$source)
dirimap <- "datasets/map_data/China_7regions_WGS1984/China_7regions_WGS1984.shp"
nwmap <- read_sf(dirimap) |> subset(name  == "north_west")
head(nwmap)
library(sf)
library(cnmap)
library(sf)
library(cnmap)
rm(list = ls())
library(sf)
library(cnmap)
dirim <- "F:/datasets/SURF_CLI_GLB_PRE_DAY/全球陆地日降水数据集(V1.0)/documents"
filim <- "SURF_CLI_GLB_PRE_DAY_STATION.csv"
dm <- read.csv(file.path(dirim, filim))
names(dm) <- c("ID", "lon", "lat", "elevation", "name", "start", "end", "source")
dm <- dm[dm$source == "CMA",]
head(dm)
table(dm$source)
# dirimap <- "datasets/map_data/China_7regions_WGS1984/China_7regions_WGS1984.shp"
# dirimap <- "datasets/map_data/China_7regions_WGS1984/China_7regions_WGS1984.shp"
# nwmap <- read_sf(dirimap) |> subset(name  == "north_west")
# dirimap <- "datasets/map_data/China_7regions_WGS1984/China_7regions_WGS1984.shp"
# nwmap <- read_sf(dirimap) |> subset(name  == "north_west")
# head(nwmap)
xmap <- getMap(name = "新疆维吾尔族自治区")
# dirimap <- "datasets/map_data/China_7regions_WGS1984/China_7regions_WGS1984.shp"
# nwmap <- read_sf(dirimap) |> subset(name  == "north_west")
# head(nwmap)
xmap <- getMap(name = "新疆维吾尔自治区")
plot(xmap)
dm <- st_as_sf(dm, coords = c("lon", "lat"), remove = FALSE, crs = 4326)
head(dm)
# dirimap <- "datasets/map_data/China_7regions_WGS1984/China_7regions_WGS1984.shp"
# nwmap <- read_sf(dirimap) |> subset(name  == "north_west")
# head(nwmap)
xmap <- getMap(name = "新疆维吾尔自治区")
pts <- dm[xmap,]
ggplot() +
geom_sf(data = xmap) +
geom_sf(data = pts)
head(pts)
head(pts)
pts2 <- as.data.frame(pts) |> subset(select = 1:5)
head(pts2)
filo <- "C:/documents/work/NorthWestPrcp/beforeAdjusted/documents"
if(!dir.exists(filo)) dir.create(filo, recursive = TRUE)
pts2 <- as.data.frame(pts) |> subset(select = 1:5)
head(pts2)
write.csv(pts2, file = filo, row.names = FALSE)
filo <- "C:/documents/work/NorthWestPrcp/beforeAdjusted/documents"
if(!dir.exists(filo)) dir.create(filo, recursive = TRUE)
write.csv(pts2, file = filo, row.names = FALSE)
filo
diro <- "C:/documents/work/NorthWestPrcp/beforeAdjusted/documents"
filo <- "xinjiang_station_prcp.csv"
write.csv(pts2, file = file.path(diro, filo), row.names = FALSE)
# copy data
head(pts)
# copy data
diri <- "F:/datasets/SURF_CLI_GLB_PRE_DAY/全球陆地日降水数据集(V1.0)/datasets/PRE"
input <- paste0("SURF_CLI_GLB_PRE_DAY-", pts$ID, ".TXT")
input
# copy data
diri <- "F:/datasets/SURF_CLI_GLB_PRE_DAY/全球陆地日降水数据集(V1.0)/datasets/PRE"
diro <- "C:/documents/work/NorthWestPrcp/beforeAdjusted/data"
fili <- paste0("SURF_CLI_GLB_PRE_DAY-", pts$ID, ".TXT")
input <- file.path(diri, fili)
head(input)
file.copy(from = input, to = diro)
rm(list = ls())
library(roxygen2)
library(devtools)
#install.packages(c("devtools", "roxygen2","usethis", "testthat"))
has_devel()
setwd("C:/documents/SourceCode")
#create("adw")
setwd("adw")
devtools::build_vignettes()
rm(list = ls())
library(roxygen2)
library(devtools)
#install.packages(c("devtools", "roxygen2","usethis", "testthat"))
has_devel()
setwd("C:/documents/SourceCode")
#create("adw")
setwd("adw")
file.edit("DESCRIPTION")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
load_all()
document()
check()
file.edit("DESCRIPTION")
devtools::build_vignettes()
load_all()
document()
check()
devtools::build_vignettes()
rm(list = ls())
library(roxygen2)
library(devtools)
#install.packages(c("devtools", "roxygen2","usethis", "testthat"))
has_devel()
setwd("C:/documents/SourceCode")
#create("adw")
setwd("adw")
file.edit("DESCRIPTION")
devtools::build_vignettes()
rm(list = ls())
library(roxygen2)
library(devtools)
#install.packages(c("devtools", "roxygen2","usethis", "testthat"))
has_devel()
setwd("C:/documents/SourceCode")
#create("adw")
setwd("adw")
# to add vignette
usethis::use_vignette("Introduction", title = "adw")
# to add vignette
# usethis::use_vignette("Introduction", title = "adw")
devtools::build_vignettes()
load_all()
document()
check()
build()
install(".")
# ------------------------------------------------------------------------------
# test
library(cnmap)
diri <- "C:/documents/adwGRID/results/dataset_station/1990_daily_station.csv"
da <- read.csv(diri)
head(da)
varTypes <- c(rep("integer", 3), rep("numeric", 5), "character")
da <- read.csv(diri, colClasses = varTypes)
head(da)
da <- da[da$month = 1 & da$day == 1, ]
head(da)
da <- da[da$month = 1 & da$day == 1, ]
da <- da[da$month == 1 & da$day == 1, ]
head(da)
da <- da[da$month == 1 & da$day == 1, c("lon", "lat", "tmax")]
?raster::distance
da <- da[da$month == 1 & da$day == 1, c("lon", "lat", "tmax")]
names(da)[3] <- "value"
head(da)
da <- read.csv(diri, colClasses = varTypes)
da <- da[da$month == 1 & da$day == 1, c("lon", "lat", "tmax")]
names(da)[3] <- "value"
head(da)
dim(da)
interpExtent <- c(-180, 180, -90, 90)
dg <- points2grid(da, extent = interpExtent, gridsize = 0.5)
dg <- points2grid(da, extent = interpExtent, gridsize = 5)
head(dg)
library(ggplot2)
library(rnaturalearth)
wld <- ne_coastline()
ggplot() +
geom_tile(data = dg, aes(x = lon, y = lat, fill = value)) +
geom_sf(data = wld)
dg <- points2grid(da, extent = interpExtent, gridsize = 2)
head(dg)
wld <- ne_coastline()
ggplot() +
geom_tile(data = dg, aes(x = lon, y = lat, fill = value)) +
geom_sf(data = wld)
dg <- points2grid(da, extent = interpExtent, gridsize = 5)
head(dg)
wld <- ne_coastline()
ggplot() +
geom_tile(data = dg, aes(x = lon, y = lat, fill = value)) +
geom_sf(data = wld)
ggplot() +
geom_tile(data = dg, aes(x = lon, y = lat, fill = value)) +
geom_sf(data = wld)
ggplot() +
geom_tile(data = na.omit(dg), aes(x = lon, y = lat, fill = value)) +
geom_sf(data = wld)
# area weighted average
awa(dg$value, dg$lat)
dg <- na.omit(dg)
# area weighted average
awa(dg$value, dg$lat)
rm(list = ls())
library(roxygen2)
library(devtools)
#install.packages(c("devtools", "roxygen2","usethis", "testthat"))
has_devel()
setwd("C:/documents/SourceCode")
#create("adw")
setwd("adw")
file.edit("DESCRIPTION")
# to add vignette
# usethis::use_vignette("Introduction", title = "adw")
devtools::build_vignettes()
# to add vignette
# usethis::use_vignette("Introduction", title = "adw")
devtools::build_vignettes()
load_all()
document()
check()
build()
load_all()
document()
check()
build()
install(".")
# ------------------------------------------------------------------------------
# test
library(cnmap)
library(ggplot2)
library(rnaturalearth)
library(adw)
diri <- "C:/documents/adwGRID/results/dataset_station/1990_daily_station.csv"
varTypes <- c(rep("integer", 3), rep("numeric", 5), "character")
da <- read.csv(diri, colClasses = varTypes)
da <- da[da$month == 1 & da$day == 1, c("lon", "lat", "tmax")]
names(da)[3] <- "value"
head(da)
dim(da)
interpExtent <- c(-180, 180, -90, 90)
dg <- points2grid(da, extent = interpExtent, gridsize = 5)
dg <- na.omit(dg)
head(dg)
wld <- ne_coastline()
ggplot() +
geom_tile(data = na.omit(dg), aes(x = lon, y = lat, fill = value)) +
geom_sf(data = wld)
# area weighted average
awa(dg$value, dg$lat)
